{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/login": {
            "post": {
                "description": "user can log in by giving their details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User Login",
                        "name": "UserLoginDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successfully",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    },
                    "500": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "user can signup by giving their details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User Signup",
                "parameters": [
                    {
                        "description": "User Signup",
                        "name": "UserSignupDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns the newly created user",
                        "schema": {
                            "$ref": "#/definitions/pb.SignupResponse"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "502": {
                        "description": "Bad gateway",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/todo": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List all todo items with pagination support",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all todo items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of todo items",
                        "schema": {
                            "$ref": "#/definitions/pb.ListTodoResponse"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "502": {
                        "description": "Bad gateway",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a todo item with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a todo item",
                "parameters": [
                    {
                        "description": "Todo item details to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the updated todo item",
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateTodoResponse"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "502": {
                        "description": "Bad gateway",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new todo item with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new todo item",
                "parameters": [
                    {
                        "description": "Todo item details",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns the newly created todo item",
                        "schema": {
                            "$ref": "#/definitions/pb.AddTodoResponse"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "502": {
                        "description": "Bad gateway",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a todo item with the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a todo item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "todo id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the deletion status",
                        "schema": {
                            "$ref": "#/definitions/pb.DeleteTodoResponse"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "502": {
                        "description": "Bad gateway",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/todo/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a todo item details by the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a todo item by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "todo id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the fetched todo item",
                        "schema": {
                            "$ref": "#/definitions/pb.TodoItemResponse"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "502": {
                        "description": "Bad gateway",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateRequestBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.SignUpRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 6
                }
            }
        },
        "models.UpdateRequestBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "pb.AddTodoResponse": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                }
            }
        },
        "pb.DeleteTodoResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "pb.ListTodoResponse": {
            "type": "object",
            "properties": {
                "ListTodos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.TodoDetails"
                    }
                }
            }
        },
        "pb.LoginResponse": {
            "type": "object",
            "properties": {
                "accesstoken": {
                    "type": "string"
                },
                "info": {
                    "$ref": "#/definitions/pb.UserInfo"
                },
                "refreshtoken": {
                    "type": "string"
                }
            }
        },
        "pb.SignupResponse": {
            "type": "object",
            "properties": {
                "accesstoken": {
                    "type": "string"
                },
                "info": {
                    "$ref": "#/definitions/pb.UserInfo"
                },
                "refreshtoken": {
                    "type": "string"
                }
            }
        },
        "pb.TodoDetails": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                }
            }
        },
        "pb.TodoItemResponse": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                }
            }
        },
        "pb.UpdateTodoResponse": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                }
            }
        },
        "pb.UserInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}